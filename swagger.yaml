openapi: 3.0.0
info:
  title: Games Schedule API
  description: API for operations with game data and teams
  version: 1.0.0
servers:
  - url: http://localhost:3000

paths:
  /games:
    get:
      summary: Get list of all games
      operationId: getAllGames
      tags:
        - Games
      responses:
        '200':
          description: A list of games
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
    post:
      summary: Create a new game
      operationId: createGame
      tags:
        - Games
      requestBody:
        description: Game object to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Game'
      responses:
        '201':
          description: The created game object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /games/{id}:
    parameters:
      - in: path
        name: id
        required: true
        description: The ID of the team to retrieve or update or delete
        schema:
          type: string
        example: "60e1b3a1c3a4b2e5f32156ab"    
    get:
      summary: Get a game by ID
      operationId: getGameById
      tags:
        - Games
      responses:
        '200':
          description: The requested game
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    patch:
      summary: Update a game by ID
      operationId: updateGameById
      tags:
        - Games
      requestBody:
        description: The updated game data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Game'
      responses:
        '200':
          description: The updated game object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete a game by ID
      operationId: deleteGameById
      tags:
        - Games
      responses:
        '200':
          description: The deleted game object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /teams:
    get:
      tags:
        - Teams
      summary: Get list of all teams
      responses:
        '200':
          description: A list of teams
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Teams
      summary: Create a new team
      requestBody:
        description: Team object to be created
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the team
                  example: "Team A"
                games:
                  type: array
                  description: The list of game IDs associated with the team
                  items:
                    type: string
                    example: ["60e1b3a1c3a4b2e5f32156ad", "60e1b3a1c3a4b2e5f32156ae"]
      responses:
        '201':
          description: The created team object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /teams/{id}:
    parameters:
      - in: path
        name: id
        required: true
        description: The ID of the team to retrieve or update or delete
        schema:
          type: string
        example: "60e1b3a1c3a4b2e5f32156ab"
    get:
      tags:
        - Teams
      summary: Get a team by ID
      responses:
        '200':
          description: The requested team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    patch:
      tags:
        - Teams
      summary: Update a team by ID
      requestBody:
        description: The updated game data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '200':
          description: The ID of the team to update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Teams
      summary: Delete a team by ID
      responses:
        '200':
          description: The ID of the team to delete
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
  /game-team:
    get:
      summary: Get all game-team
      operationId: getGameTeams
      tags:
        - Game Team
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GameTeam'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create a new game-team
      operationId: createGameTeam
      tags:
        - Game Team
      requestBody:
        description: Game and Team IDs
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                game:
                  type: string
                  description: The ID of the game
                  example: 60e1b3a1c32bf60984cdd5e9
                team:
                  type: string
                  description: The ID of the team
                  example: 60e1b3a1c32bf60984cdd5ea
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameTeam'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /game-team/{id}:
    parameters:
      - in: path
        name: id
        required: true
        description: The ID of the game-team to retrieve or update or delete
        schema:
          type: string
        example: "60e1b3a1c3a4b2e5f32156ab"    
    get:
      summary: Get a game-team by ID
      operationId: getGameTeamById
      tags:
        - Game Team
      parameters:
        - name: id
          in: path
          description: ID of the game-team to get
          required: true
          schema:
            type: string
            example: 60e1b3a1c32bf60984cdd5e9
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameTeam'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    patch:
      summary: Update a game-team by ID
      operationId: updateGameTeamById
      tags:
        - Game Team
      parameters:
        - name: id
          in: path
          description: ID of the game-team to update
          required: true
          schema:
            type: string
            example: 60e1b3a1c32bf60984cdd5e9
      requestBody:
        description: Game and/or Team IDs
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                game:
                  type: string
                  description: The ID of the game
                  example: 60e1b3a1c32bf60984cdd5e9
                team:
                  type: string
                  description: The ID of the team
                  example: 60e1b3a1c32bf60984cdd5ea
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameTeam'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Game Team
      summary: Delete a game-team by ID
      responses:
        '200':
          description: The ID of the game-team to delete
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameTeam'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'      

components:
  schemas:
    Game:
      type: object
      properties:
        _id:
          type: string
        date:
          type: string
          example: "2023-05-04"
        team1Name:
          type: string
        team2Name:
          type: string
        team1Score:
          type: integer
        team2Score:
          type: integer
    Team:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        games:
          type: object
          example: [60e1b3a1c3f5da1d5c55a0e3, 60e1b3a1c3f5da1d5c55a0e4]

    GameTeam:
      type: object
      properties:
        _id:
          type: string
        game:
          type: object
          example: 60e1b3a1c3f5da1d5c55a0e3
        team:
          type: object
          example: 60e1b3a1c3f5da1d5c55a0e3

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error message
                example: Invalid request data

    NotFound:
      description: The specified game team was not found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error message
                example: Game team not found

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error message
                example: Internal server error
                